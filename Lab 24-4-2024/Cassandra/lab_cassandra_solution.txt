PS E:\Chương trình học\Kì 2 2023-2024\Kĩ thuật và công nghệ dữ liệu lớn\Lab 24-4\Lab 24424 (7-10)-20240504\Cassandra> wsl
wsl@LAPTOP-GFDB5TP5:/mnt/e/Chương trình học/Kì 2 2023-2024/Kĩ thuật và công nghệ dữ liệu lớn/Lab 24-4/Lab 24424 (7-10)-20240504/Cassandra$ cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 5.0-beta1 | CQL spec 3.4.7 | Native protocol v5]
Use HELP for help.
cqlsh> DESC KEYSPACES;

system_virtual_schema  system_schema  system_views  system_distributed
stores                 system_auth    system        system_traces     

cqlsh> DESC KEYSPACE system;

CREATE KEYSPACE system WITH replication = {'class': 'LocalStrategy'}  AND durable_writes = true;

CREATE TABLE system.peer_events_v2 (
    peer inet,
    peer_port int,
    hints_dropped map<timeuuid, int>,
    PRIMARY KEY (peer, peer_port)
) WITH CLUSTERING ORDER BY (peer_port ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'events related to peers'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.size_estimates (
    keyspace_name text,
    table_name text,
    range_start text,
    range_end text,
    mean_partition_size bigint,
    partitions_count bigint,
    PRIMARY KEY (keyspace_name, table_name, range_start, range_end)
) WITH CLUSTERING ORDER BY (table_name ASC, range_start ASC, range_end ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'per-table primary range size estimates, table is deprecated in favor of table_estimates'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.view_builds_in_progress (
    keyspace_name text,
    view_name text,
    start_token text,
    end_token text,
    keys_built bigint,
    last_token text,
    PRIMARY KEY (keyspace_name, view_name, start_token, end_token)
) WITH CLUSTERING ORDER BY (view_name ASC, start_token ASC, end_token ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'views builds current progress'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.paxos_repair_history (
    keyspace_name text,
    table_name text,
    points frozen<list<frozen<tuple<blob, timeuuid>>>>,
    PRIMARY KEY (keyspace_name, table_name)
) WITH CLUSTERING ORDER BY (table_name ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'paxos repair history'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.repairs (
    parent_id timeuuid PRIMARY KEY,
    cfids set<uuid>,
    coordinator inet,
    coordinator_port int,
    last_update timestamp,
    participants set<inet>,
    participants_wp set<text>,
    ranges set<blob>,
    repaired_at timestamp,
    started_at timestamp,
    state int
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'repairs'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.available_ranges (
    keyspace_name text PRIMARY KEY,
    ranges set<blob>
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'available keyspace/ranges during bootstrap/replace that are ready to be served'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.batches (
    id timeuuid PRIMARY KEY,
    mutations list<blob>,
    version int
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'batches awaiting replay'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '2'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.available_ranges_v2 (
    keyspace_name text PRIMARY KEY,
    full_ranges set<blob>,
    transient_ranges set<blob>
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'available keyspace/ranges during bootstrap/replace that are ready to be served'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.transferred_ranges_v2 (
    operation text,
    keyspace_name text,
    peer inet,
    peer_port int,
    ranges set<blob>,
    PRIMARY KEY ((operation, keyspace_name), peer, peer_port)
) WITH CLUSTERING ORDER BY (peer ASC, peer_port ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'record of transferred ranges for streaming operation'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system."IndexInfo" (
    table_name text,
    index_name text,
    value blob,
    PRIMARY KEY (table_name, index_name)
) WITH CLUSTERING ORDER BY (index_name ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'built column indexes'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.sstable_activity (
    keyspace_name text,
    columnfamily_name text,
    generation int,
    rate_120m double,
    rate_15m double,
    PRIMARY KEY ((keyspace_name, columnfamily_name, generation))
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'historic sstable read rates'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.peer_events (
    peer inet PRIMARY KEY,
    hints_dropped map<timeuuid, int>
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'events related to peers'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.sstable_activity_v2 (
    keyspace_name text,
    table_name text,
    id text,
    rate_120m double,
    rate_15m double,
    PRIMARY KEY ((keyspace_name, table_name, id))
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'historic sstable read rates'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.compaction_history (
    id timeuuid PRIMARY KEY,
    bytes_in bigint,
    bytes_out bigint,
    columnfamily_name text,
    compacted_at timestamp,
    compaction_properties frozen<map<text, text>>,
    keyspace_name text,
    rows_merged map<int, bigint>
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'week-long compaction history'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 604800
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.local (
    key text PRIMARY KEY,
    bootstrapped text,
    broadcast_address inet,
    broadcast_port int,
    cluster_name text,
    cql_version text,
    data_center text,
    gossip_generation int,
    host_id uuid,
    listen_address inet,
    listen_port int,
    native_protocol_version text,
    partitioner text,
    rack text,
    release_version text,
    rpc_address inet,
    rpc_port int,
    schema_version uuid,
    tokens set<text>,
    truncated_at map<uuid, blob>
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'information about the local node'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.table_estimates (
    keyspace_name text,
    table_name text,
    range_type text,
    range_start text,
    range_end text,
    mean_partition_size bigint,
    partitions_count bigint,
    PRIMARY KEY (keyspace_name, table_name, range_type, range_start, range_end)
) WITH CLUSTERING ORDER BY (table_name ASC, range_type ASC, range_start ASC, range_end ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'per-table range size estimates'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.peers_v2 (
    peer inet,
    peer_port int,
    data_center text,
    host_id uuid,
    native_address inet,
    native_port int,
    preferred_ip inet,
    preferred_port int,
    rack text,
    release_version text,
    schema_version uuid,
    tokens set<text>,
    PRIMARY KEY (peer, peer_port)
) WITH CLUSTERING ORDER BY (peer_port ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'information about known peers in the cluster'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.built_views (
    keyspace_name text,
    view_name text,
    status_replicated boolean,
    PRIMARY KEY (keyspace_name, view_name)
) WITH CLUSTERING ORDER BY (view_name ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'built views'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.top_partitions (
    keyspace_name text,
    table_name text,
    top_type text,
    last_update timestamp,
    top frozen<list<frozen<tuple<text, bigint>>>>,
    PRIMARY KEY (keyspace_name, table_name, top_type)
) WITH CLUSTERING ORDER BY (table_name ASC, top_type ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'Stores the top partitions'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.peers (
    peer inet PRIMARY KEY,
    data_center text,
    host_id uuid,
    preferred_ip inet,
    rack text,
    release_version text,
    rpc_address inet,
    schema_version uuid,
    tokens set<text>
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'information about known peers in the cluster'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.prepared_statements (
    prepared_id blob PRIMARY KEY,
    logged_keyspace text,
    query_string text
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'prepared statements'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

CREATE TABLE system.paxos (
    row_key blob,
    cf_id uuid,
    in_progress_ballot timeuuid,
    in_progress_read_ballot timeuuid,
    most_recent_commit blob,
    most_recent_commit_at timeuuid,
    most_recent_commit_version int,
    proposal blob,
    proposal_ballot timeuuid,
    proposal_version int,
    PRIMARY KEY (row_key, cf_id)
) WITH CLUSTERING ORDER BY (cf_id ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'in-progress paxos proposals'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.LeveledCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';
CREATE CUSTOM INDEX "PaxosUncommittedIndex" ON system.paxos () USING 'org.apache.cassandra.service.paxos.uncommitted.PaxosUncommittedIndex';

CREATE TABLE system.transferred_ranges (
    operation text,
    keyspace_name text,
    peer inet,
    ranges set<blob>,
    PRIMARY KEY ((operation, keyspace_name), peer)
) WITH CLUSTERING ORDER BY (peer ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = 'record of transferred ranges for streaming operation'
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 0
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 3600000
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

cqlsh> CREATE KEYSPACE stores WITH REPLICATION = { 'class' : 'SimpleStrategy' , 'replication_factor' : 3 };
AlreadyExists: Keyspace 'stores' already exists
cqlsh> CREATE KEYSPACE products WITH REPLICATION = { 'class' : 'SimpleStrategy' , 'replication_factor' : 3 } AND DURABLE_WRITES=false;

Warnings :
Your replication factor 3 for keyspace products is higher than the number of nodes 1

cqlsh> USE stores;
cqlsh:stores> //Tạo 1 bảng trong keyspace stores
cqlsh:stores> CREATE TABLE store (
          ... id uuid
          ... );
InvalidRequest: Error from server: code=2200 [Invalid query] message="No PRIMARY KEY specifed for table 'store' (exactly one required)"
cqlsh:stores> DESCRIBE TABLES

<empty>

cqlsh:stores> CREATE TABLE store (
          ... id uuid,
          ... name text,
          ... cnpj text,
          ... category text,
          ... num_lojas,
          ... )
          ... ;
SyntaxException: line 6:9 no viable alternative at input ',' (... text,category text,num_lojas[,]...)
cqlsh:stores> DESCIBE TABLES
          ... ;
SyntaxException: line 1:0 no viable alternative at input 'DESCIBE' ([DESCIBE]...)
cqlsh:stores> DESCRIBE TABLES

<empty>

cqlsh:stores> CREATE TABLE store (
          ... id uuid,
          ... name text,
          ... cnpj text,
          ... category text,
          ... num_lojas int,
          ... PRIMARY KEY ((id), cnpj)
          ... );
cqlsh:stores> DESCRIBE TABLES

store

cqlsh:stores> // cassandra không phân biệt chữ hoa, thường
cqlsh:stores> DESCRIBE tables

store

cqlsh:stores> INSERT INTO store (id, name, cnpj, category, store_num)
          ... VALUES (uuid(), 'Lojinha do Cicrano', '00.000.000/0001-00', 'kitchen', 3);
InvalidRequest: Error from server: code=2200 [Invalid query] message="Undefined column name store_num in table stores.store"
cqlsh:stores> ALTER TABLE store RENAME num_lojas TO store_num;
InvalidRequest: Error from server: code=2200 [Invalid query] message="Cannot rename non PRIMARY KEY column num_lojas"
cqlsh:stores> DESCRIBE TABLE store

CREATE TABLE stores.store (
    id uuid,
    cnpj text,
    category text,
    name text,
    num_lojas int,
    PRIMARY KEY (id, cnpj)
) WITH CLUSTERING ORDER BY (cnpj ASC)
    AND additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

cqlsh:stores> select * from store
          ... ;

 id | cnpj | category | name | num_lojas
----+------+----------+------+-----------

(0 rows)
cqlsh:stores> //thêm cột
cqlsh:stores> ALTER TABLE store ADD store_num int;
cqlsh:stores> select * from store
          ... ;

 id | cnpj | category | name | num_lojas | store_num
----+------+----------+------+-----------+-----------

(0 rows)
cqlsh:stores> ALTER TABLE store DROP num_lojas;
cqlsh:stores> select * from store
          ... ;

 id | cnpj | category | name | store_num
----+------+----------+------+-----------

(0 rows)
cqlsh:stores> INSERT INTO store (id, name, cnpj, category, store_num)
          ... VALUES ( uuid(), 'Lojinha do Cicrano', '00.000.000/0001-00', 'kitchen', 3);
cqlsh:stores> SELECT * FROM store;

 id                                   | cnpj               | category | name               | store_num
--------------------------------------+--------------------+----------+--------------------+-----------
 a7d58700-0f43-4880-8be3-d528b8dc3575 | 00.000.000/0001-00 |  kitchen | Lojinha do Cicrano |         3

(1 rows)
cqlsh:stores> // add thêm dữ liệu mới
cqlsh:stores> INSERT INTO store (id, name, cnpj, category, store_num)
          ... VALUES ( uuid(), 'Magazine Mota', '00.000.000/0002-00', 'bed, table and bath', 145);
cqlsh:stores> select * from store
          ... ;

 id                                   | cnpj               | category            | name               | store_num
--------------------------------------+--------------------+---------------------+--------------------+-----------
 a7d58700-0f43-4880-8be3-d528b8dc3575 | 00.000.000/0001-00 |             kitchen | Lojinha do Cicrano |         3
 b8ee0434-233f-4f9e-a20f-605fc9dfb902 | 00.000.000/0002-00 | bed, table and bath |      Magazine Mota |       145

(2 rows)
cqlsh:stores> DROP TABLE store
          ... ;
cqlsh:stores> DESCRIBE TABLES

<empty>

cqlsh:stores> USE product
          ... ;
InvalidRequest: Error from server: code=2200 [Invalid query] message="Keyspace 'product' does not exist"
cqlsh:stores> USE product;
InvalidRequest: Error from server: code=2200 [Invalid query] message="Keyspace 'product' does not exist"
cqlsh:stores> DESC KEYSPACES

system_virtual_schema  system_auth   products
stores                 system_views  system_distributed
system_schema          system        system_traces

cqlsh:stores> USE products;
cqlsh:products> CREATE TABLE product (
            ... id uuid,
            ... barcode text,
            ... name text,
            ... price float,
            ... category text,
            ... store_id text,
            ... PRIMARY KEY ((id), barcode, store_id)
            ... );
cqlsh:products> select * from product
            ... ;

 id | barcode | store_id | category | name | price
----+---------+----------+----------+------+-------

(0 rows)
cqlsh:products> INSERT INTO product (id, barcode, name, category, price)
            ... VALUES ( uuid(), '23452342342342342', 'ACME Full HD 43"', 'tv', 145);
InvalidRequest: Error from server: code=2200 [Invalid query] message="Some clustering keys are missing: store_id"
cqlsh:products> INSERT INTO product (id, barcode, name, store_id, price)
             VALUES ( 95eaeac0-d1f2-11ea-87d0-0242ac130003, '345634563456', 'cell loader.', '95eaeac0-d1f2-11ea-87d0-0242ac130003', 145);

[1]+  Stopped                 cqlsh
wsl@LAPTOP-GFDB5TP5:/mnt/e/Chương trình học/Kì 2 2023-2024/Kĩ thuật và công nghệ dữ liệu lớn/Lab 24-4/Lab 24424 (7-10)-20240504/Cassandra$ cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 5.0-beta1 | CQL spec 3.4.7 | Native protocol v5]
Use HELP for help.
cqlsh> INSERT INTO product (id, barcode, name, store_id, price)
   ... VALUES ( uuid(), '345634563456', 'cell loader.', '95eaeac0-d1f2-11ea-87d0-0242ac130003', 145);
InvalidRequest: Error from server: code=2200 [Invalid query] message="No keyspace has been specified. USE a keyspace, or explicitly specify keyspace.tablename"
cqlsh> USE products
   ... ;
cqlsh:products> INSERT INTO product (id, barcode, name, store_id, price)
            ... VALUES ( uuid(), '345634563456', 'cell loader.', '95eaeac0-d1f2-11ea-87d0-0242ac130003', 145);
cqlsh:products> select * from product;

 id                                   | barcode      | store_id                             | category | name         | price
--------------------------------------+--------------+--------------------------------------+----------+--------------+-------
 6a9f1c37-a12c-4a19-a2d3-3e235d547390 | 345634563456 | 95eaeac0-d1f2-11ea-87d0-0242ac130003 |     null | cell loader. |   145

(1 rows)
cqlsh:products> INSERT INTO product (id, barcode, name, store_id, price)
            ... VALUES ( uuid(), '96541651651650', 'cell battery.', '95eaeac0-d1f2-11ea-87d0-0242ac130003', 145);
cqlsh:products> INSERT INTO product (id, barcode, name, store_id, price)
            ... VALUES ( uuid(), '7849465132654', 'cell loader.', '95eaeac0-d1f2-11ea-87d0-0242ac130003', 145);
cqlsh:products> select * from product
            ... ;

 id                                   | barcode        | store_id                             | category | name          | price
--------------------------------------+----------------+--------------------------------------+----------+---------------+-------
 6a9f1c37-a12c-4a19-a2d3-3e235d547390 |   345634563456 | 95eaeac0-d1f2-11ea-87d0-0242ac130003 |     null |  cell loader. |   145
 eb75d3a4-2433-4149-9c71-a7269ce52268 |  7849465132654 | 95eaeac0-d1f2-11ea-87d0-0242ac130003 |     null |  cell loader. |   145
 ef54b0d9-e541-4146-9e16-f4ada062d36e | 96541651651650 | 95eaeac0-d1f2-11ea-87d0-0242ac130003 |     null | cell battery. |   145

(3 rows)
cqlsh:products> CREATE TABLE tv_specs (
            ... id uuid,
            ... weight_kg float,
            ... size_screen float,
            ... PRIMERY KEY ((id), weight_kg, size_screen)
            ... );
SyntaxException: line 5:12 mismatched input '(' expecting ')' (...size_screen float,PRIMERY KEY [(]...)
cqlsh:products> CREATE TABLE tv_specs (
            ...  id uuid,
            ... weight_kg float,
            ... size_screen float,
            ... PRIMARY KEY ((id), weight_kg, size_screen),
            ... );
cqlsh:products> CREATE TABLE tv_funcoes (
            ... id uuid,
            ... webflix boolean,
            ... boolean cousin_video,
            ... PRIMARY KEY ((id), weight_kg, size_screen)
            ... );
InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown type products.cousin_video"
cqlsh:products> CREATE TABLE tv_funcoes (
            ... id uuid,
            ... webflix boolean,
            ... cousin_video boolean,
            ... PRIMARY KEY ((id), weight_kg, size_screen)
            ... );
InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown column 'weight_kg' referenced in PRIMARY KEY for table 'tv_funcoes'"
cqlsh:products> select * from tv_specs
            ... ;

 id | weight_kg | size_screen
----+-----------+-------------

(0 rows)
cqlsh:products> CREATE TABLE tv_funcoes (
            ... id uuid,
            ... webflix boolean,
            ... cousin_video boolean,
            ... PRIMARY KEY ((id), webflix, cousin_video)
            ... );
cqlsh:products> select * from tv_funcoes
            ... ;

 id | webflix | cousin_video
----+---------+--------------

(0 rows)
cqlsh:products>